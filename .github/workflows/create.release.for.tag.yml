name: Create Release for Tag

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Previous Tag
        id: previoustag
        run: |
          # Get the latest tag that is not the current tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null)
          if [ $? -ne 0 ]; then
            echo "No previous tag found. Using first commit."
            # Use the hash of the very first commit if no previous tag is found
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_ENV
          echo "Previous tag: $PREVIOUS_TAG"

      - name: Generate Release Notes
        id: notes
        env:
          PREVIOUS_TAG: ${{ env.previous_tag }}
          RELEASE_DESCRIPTION: |
            Agents ${{ github.ref_name }}

            Instructions for AI assistants.
        run: |
          BODY="$RELEASE_DESCRIPTION"

          # Append a changelog
          BODY="${BODY}\n\n**Full Changelog**:\n"
          BODY="${BODY}$(git log --pretty=format:'* %s (%h)' $PREVIOUS_TAG..${{ github.sha }})"

          # Make the body safe for multiline output
          BODY="${BODY//'%'/'%25'}"
          BODY="${BODY//$'\n'/'%0A'}"
          BODY="${BODY//$'\r'/'%0D'}"

          echo "body=${BODY}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: ${{ steps.notes.outputs.body }}
          files: AGENTS.md
